// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// BASIC USER FUNCTION
model User {
  // Get from firebase google login
  user_id String @id
  name    String
  email   String @unique
  picture String

  // Data that needs to be filled
  birthDate DateTime?
  skinType  String?

  AnalysisLog AnalysisLog[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AnalysisLog {
  id             Int              @id @default(autoincrement())
  user_id        String
  owner          User             @relation(fields: [user_id], references: [user_id])
  skinScore      Int              @default(100)
  picture        String           @unique
  analysisResult AnalysisResult[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AnalysisResult {
  id            Int         @id @default(autoincrement())
  picture       String
  problemCount  Int
  category      String
  modelResult   Json
  AnalysisLog   AnalysisLog @relation(fields: [analysisLogId], references: [id])
  analysisLogId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// PRODUCT
model skinCareProduct {
  id          Int     @id @default(autoincrement())
  name        String
  brand       String
  type        String
  price       Decimal @db.Money
  rank        String
  ingredients String
  image       String

  // skintype
  oily        Boolean
  dry         Boolean
  sensitive   Boolean
  combination Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// QUEST
model Quest {
  id           Int    @id @default(autoincrement())
  dayOfTheWeek Int
  title        String
  description  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Articles
model Article {
  id          Int    @id @default(autoincrement())
  title       String
  description String
  image       String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
